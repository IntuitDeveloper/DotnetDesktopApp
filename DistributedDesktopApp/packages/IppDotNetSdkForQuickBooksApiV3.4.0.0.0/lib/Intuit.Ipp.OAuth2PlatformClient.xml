<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Intuit.Ipp.OAuth2PlatformClient</name>
    </assembly>
    <members>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.NamespaceDoc">
            <summary>
            Intuit.Ipp.OAuth2PlatformClient has OAuth2 specific client lib with helper classes for different calls related to getting tokens and managing them.   
            </summary>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.Base64Url">
            <summary>
            Helper class for Base64 Url conversions
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.Base64Url.Encode(System.Byte[])">
            <summary>
            Encodes byte array to Base 64 string
            </summary>
            <param name="arg"></param>       
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.Base64Url.Decode(System.String)">
            <summary>
            Converts from Base 64 string to byte array
            </summary>
            <param name="arg"></param>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.AuthenticationStyle">
            <summary>
            Enum class for AuthenticationStyle
            </summary>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.AuthorizeRequest">
            <summary>
            Helper class fo creating Authorize url
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.AuthorizeRequest.#ctor(System.Uri)">
            <summary>
            Maps authorize endpoint
            </summary>
            <param name="authorizeEndpoint"></param>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.AuthorizeRequest.#ctor(System.String)">
            <summary>
            Maps authorize endpoint
            </summary>
            <param name="authorizeEndpoint"></param>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.AuthorizeRequest.Create(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Formats values to the required url format
            </summary>
            <param name="values"></param>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.AuthorizeRequestExtensions">
            <summary>
            Extension class for AuthorizeRequest
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.AuthorizeRequestExtensions.Create(Intuit.Ipp.OAuth2PlatformClient.AuthorizeRequest,System.Object)">
            <summary>
            Create Authorize request
            </summary>
            <param name="request"></param>
            <param name="values"></param>
            <returns>string</returns>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.AuthorizeRequestExtensions.CreateAuthorizeUrl(Intuit.Ipp.OAuth2PlatformClient.AuthorizeRequest,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            Create Authorize Url
            </summary>
            <param name="request"></param>
            <param name="clientId"></param>
            <param name="responseType"></param>
            <param name="scope"></param>
            <param name="redirectUri"></param>
            <param name="state"></param>
            <param name="extra"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Intuit.Ipp.OAuth2PlatformClient.AuthorizeRequestExtensions.ObjectToDictionary(System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:Intuit.Ipp.OAuth2PlatformClient.AuthorizeRequestExtensions.Merge(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})" -->
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.AuthorizeResponse">
            <summary>
            AuthorizeResponse Class to map response from Authroize call
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.AuthorizeResponse.TryGet(System.String)">
            <summary>
            Decodes url
            </summary>
            <param name="type"></param>
            <returns>string</returns>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.DiscoveryClient">
            <summary>
            Discovery Client ot get details from Discovery Url
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.DiscoveryClient.GetAsync(System.String)">
            <summary>
            GetAsync call for Discovery Url
            </summary>
            <param name="authority"></param>
        </member>
        <member name="F:Intuit.Ipp.OAuth2PlatformClient.DiscoveryClient._client">
            <summary>
            HttpClient
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.DiscoveryClient.Authority">
            <summary>
            Authority
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.DiscoveryClient.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.DiscoveryClient.Policy">
            <summary>
            Policy
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.DiscoveryClient.Timeout">
            <summary>
            Timeout
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.DiscoveryPolicy.RequireHttps">
            <summary>
            Specifies if HTTPS is enforced on all endpoints. Defaults to true.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.DiscoveryPolicy.ValidateIssuerName">
            <summary>
            Specifies if the issuer name is checked to be identical to the authority. Defaults to true.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.DiscoveryResponse">
            <summary>
            DiscoveryResponse class to handle response from Discovery  call
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.DiscoveryResponse.#ctor(System.String,Intuit.Ipp.OAuth2PlatformClient.DiscoveryPolicy)">
            <summary>
            Handles success raw response from Token api call
            </summary>
            <param name="raw"></param>
            <param name="policy"></param>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.DiscoveryResponse.#ctor(System.Net.HttpStatusCode,System.String)">
            <summary>
            Handles exception response from Token api call
            </summary>
            <param name="statusCode"></param>
            <param name="reason"></param>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.DiscoveryResponse.#ctor(System.Exception,System.String)">
            <summary>
            Handles exception response from Token api call
            </summary>
            <param name="exception"></param>
            <param name="errorMessage"></param>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.DiscoveryResponse.Issuer">
            <summary>
            Strongly typed getters
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.DiscoveryResponse.TryGetValue(System.String)">
            <summary>
            Generic getters
            </summary> 
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.DiscoveryResponse.Validate(Intuit.Ipp.OAuth2PlatformClient.DiscoveryPolicy)">
            <summary>
            Validates Discovery policy
            </summary>
            <param name="policy"></param>
            <returns>string</returns>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.DiscoveryResponse.ValidateIssuerName(System.String,System.String)">
            <summary>
            Validates Issuer Name
            </summary>
            <param name="issuer"></param>
            <param name="authority"></param>
            <returns>bool</returns>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.DiscoveryResponse.ValidateEndpoints(Newtonsoft.Json.Linq.JObject,Intuit.Ipp.OAuth2PlatformClient.DiscoveryPolicy)">
            <summary>
            Validates Endpoints
            </summary>
            <param name="json"></param>
            <param name="policy"></param>
            <returns>bool</returns>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.JObjectExtensions">
            <summary>
            Json Object extension
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Intuit.Ipp.OAuth2PlatformClient.JObjectExtensions.ToClaims(Newtonsoft.Json.Linq.JObject)" -->
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.JObjectExtensions.TryGetValue(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Helper for Json object
            </summary>
            <param name="json"></param>
            <param name="name"></param>
            <returns>JToken</returns>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.JObjectExtensions.TryGetString(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Helper for Json object
            </summary>
            <param name="json"></param>
            <param name="name"></param>
            <returns>string</returns>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.JObjectExtensions.TryGetBoolean(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Helper for Json object
            </summary>
            <param name="json"></param>
            <param name="name"></param>
            <returns>bool</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Intuit.Ipp.OAuth2PlatformClient.JObjectExtensions.TryGetStringArray(Newtonsoft.Json.Linq.JObject,System.String)" -->
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.ResponseErrorType">
            <summary>
            Enum for Response Error
            </summary>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.TokenClient">
            <summary>
            TokenClient Class
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.TokenClient.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="endpoint"></param>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.TokenClient.#ctor(System.String,System.Net.Http.HttpMessageHandler)">
            <summary>
            Constructor
            </summary>
            <param name="endpoint"></param>
            <param name="innerHttpMessageHandler"></param>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.TokenClient.#ctor(System.String,System.String,System.String,Intuit.Ipp.OAuth2PlatformClient.AuthenticationStyle)">
            <summary>
            Constructor
            </summary>
            <param name="endpoint"></param>
            <param name="clientId"></param>
            <param name="clientSecret"></param>
            <param name="style"></param>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.TokenClient.#ctor(System.String,System.String,System.String,System.Net.Http.HttpMessageHandler,Intuit.Ipp.OAuth2PlatformClient.AuthenticationStyle)">
            <summary>
            Constructor
            </summary>
            <param name="endpoint"></param>
            <param name="clientId"></param>
            <param name="clientSecret"></param>
            <param name="innerHttpMessageHandler"></param>
            <param name="style"></param>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.TokenClient.ClientId">
            <summary>
            ClientId
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.TokenClient.ClientSecret">
            <summary>
            ClientSecret
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.TokenClient.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.TokenClient.Timeout">
            <summary>
            TimeOut
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.TokenClient.RequestAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            RequestAsync call
            </summary>
            <param name="form"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.TokenResponse">
            <summary>
            TokenResponse class to map response from Token call
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.TokenResponse.#ctor(System.String)">
            <summary>
            Handles success raw response from Token api call
            </summary>
            <param name="raw"></param>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.TokenResponse.#ctor(System.Exception)">
            <summary>
            Handles exception response from Token api call
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.TokenResponse.#ctor(System.Net.HttpStatusCode,System.String)">
            <summary>
            Handles exception response from Token api call
            </summary>
            <param name="statusCode"></param>
            <param name="reason"></param> 
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.TokenResponse.AccessTokenExpiresIn">
            <summary>
            Returns Access Token expiry value
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.TokenResponse.RefreshTokenExpiresIn">
            <summary>
            Returns RefreshToken Expiry Value
            </summary>   
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.TokenResponse.Error">
            <summary>
            Handles error
            </summary>   
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.TokenResponse.TryGet(System.String)">
            <summary>
            Helper to get Name
            </summary>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.JsonToken">
            <summary>
            JsonToken Class
            </summary>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationClient">
            <summary>
            TokenRevocationClient Class
            </summary>
        </member>
        <member name="F:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationClient.Client">
            <summary>
            Client
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationClient.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationClient.AuthenticationStyle">
            <summary>
            AuthenticationStyle
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationClient.ClientId">
            <summary>
            ClientId
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationClient.ClientSecret">
            <summary>
            ClientSecret
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationClient.#ctor(System.String,System.String,System.String,System.Net.Http.HttpMessageHandler)">
            <summary>
            TokenRevocationClient
            </summary>
            <param name="endpoint"></param>
            <param name="clientId"></param>
            <param name="clientSecret"></param>
            <param name="innerHttpMessageHandler"></param>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationClient.Timeout">
            <summary>
            Timeout
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationClient.RevokeAsync(Intuit.Ipp.OAuth2PlatformClient.TokenRevocationRequest,System.Threading.CancellationToken)" -->
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationClientExtensions">
            <summary>
            Extension Class for TokenRevocationClient
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationClientExtensions.RevokeAccessTokenAsync(Intuit.Ipp.OAuth2PlatformClient.TokenRevocationClient,System.String,System.Threading.CancellationToken)" -->
        <!-- Badly formed XML comment ignored for member "M:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationClientExtensions.RevokeRefreshTokenAsync(Intuit.Ipp.OAuth2PlatformClient.TokenRevocationClient,System.String,System.Threading.CancellationToken)" -->
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationRequest">
            <summary>
            TokenRevocationRequest Class
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationRequest.Token">
            <summary>
            Token
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationRequest.ClientId">
            <summary>
            ClientId
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationRequest.ClientSecret">
            <summary>
            ClientSecret
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationRequest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationResponse">
            <summary>
            TokenRevocationResponse to handle response from Token Revoke call
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationResponse.#ctor">
            <summary>
            Handles successful raw response from Token Revoke api call
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationResponse.#ctor(System.String)">
            <summary>
            Handles successful raw response from Token Revoke api call
            </summary>
            <param name="raw"></param>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationResponse.#ctor(System.Net.HttpStatusCode,System.String)">
            <summary>
            Handles exception response from Token Revoke api call
            </summary>
            <param name="statusCode"></param>
            <param name="reason"></param>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationResponse.#ctor(System.Exception)">
            <summary>
            Handles exception response from UserInfo api call
            </summary>
            <param name="exception"></param>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.TokenRevocationResponse.Error">
            <summary>
            Handles Error
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.UserInfoClient.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="endpoint"></param>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.UserInfoClient.#ctor(System.String,System.Net.Http.HttpMessageHandler)">
            <summary>
            Constructor
            </summary>
            <param name="endpoint"></param>
            <param name="innerHttpMessageHandler"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Intuit.Ipp.OAuth2PlatformClient.UserInfoClient.GetAsync(System.String,System.Threading.CancellationToken)" -->
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.UserInfoResponse">
            <summary>
            UserInfoResponse Class to map response from UserInfo call
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.UserInfoResponse.#ctor(System.String)">
            <summary>
            Handles successful raw response from UserInfo api call
            </summary>
            <param name="raw"></param>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.UserInfoResponse.#ctor(System.Net.HttpStatusCode,System.String)">
            <summary>
            Handles exception response from UserInfo api call
            </summary>
            <param name="statusCode"></param>
            <param name="reason"></param>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.UserInfoResponse.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="exception"></param>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.CryptoRandom">
            <summary>
            A class that mimics the standard Random class in the .NET Framework - but uses a random number generator internally.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.CryptoRandom.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.OAuth2PlatformClient.CryptoRandom"/> class.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.CryptoRandom.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Intuit.Ipp.OAuth2PlatformClient.CryptoRandom"/> class.
            </summary>
            <param name="ignoredSeed">seed (ignored)</param>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.CryptoRandom.Next">
            <summary>
            Returns a nonnegative random number.
            </summary>
            <returns>
            A 32-bit signed integer greater than or equal to zero and less than <see cref="F:System.Int32.MaxValue"/>.
            </returns>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.CryptoRandom.Next(System.Int32)">
            <summary>
            Returns a nonnegative random number less than the specified maximum.
            </summary>
            <param name="maxValue">The exclusive upper bound of the random number to be generated. <paramref name="maxValue"/> must be greater than or equal to zero.</param>
            <returns>
            A 32-bit signed integer greater than or equal to zero, and less than <paramref name="maxValue"/>; that is, the range of return values ordinarily includes zero but not <paramref name="maxValue"/>. However, if <paramref name="maxValue"/> equals zero, <paramref name="maxValue"/> is returned.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="maxValue"/> is less than zero.
            </exception>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.CryptoRandom.Next(System.Int32,System.Int32)">
            <summary>
            Returns a random number within a specified range.
            </summary>
            <param name="minValue">The inclusive lower bound of the random number returned.</param>
            <param name="maxValue">The exclusive upper bound of the random number returned. <paramref name="maxValue"/> must be greater than or equal to <paramref name="minValue"/>.</param>
            <returns>
            A 32-bit signed integer greater than or equal to <paramref name="minValue"/> and less than <paramref name="maxValue"/>; that is, the range of return values includes <paramref name="minValue"/> but not <paramref name="maxValue"/>. If <paramref name="minValue"/> equals <paramref name="maxValue"/>, <paramref name="minValue"/> is returned.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="minValue"/> is greater than <paramref name="maxValue"/>.
            </exception>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.CryptoRandom.NextDouble">
            <summary>
            Returns a random number between 0.0 and 1.0.
            </summary>
            <returns>
            A double-precision floating point number greater than or equal to 0.0, and less than 1.0.
            </returns>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.CryptoRandom.NextBytes(System.Byte[])">
            <summary>
            Fills the elements of a specified array of bytes with random numbers.
            </summary>
            <param name="buffer">An array of bytes to contain random numbers.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is null.
            </exception>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.EpochTimeExtensions">
            <summary>
            Helper class for Epoch time conversions
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.EpochTimeExtensions.ToEpochTime(System.DateTime)">
            <summary>
            Converts the given date value to epoch time.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.EpochTimeExtensions.ToEpochTime(System.DateTimeOffset)">
            <summary>
            Converts the given date value to epoch time.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.EpochTimeExtensions.ToDateTimeFromEpoch(System.Int64)">
            <summary>
            Converts the given epoch time to a <see cref="T:System.DateTime"/> with <see cref="F:System.DateTimeKind.Utc"/> kind.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.EpochTimeExtensions.ToDateTimeOffsetFromEpoch(System.Int64)">
            <summary>
            Converts the given epoch time to a UTC <see cref="T:System.DateTimeOffset"/>.
            </summary>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.IdTokenHeader">
            <summary>
            Helper class for Identity Token Header
            </summary>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.IdTokenJWTClaimTypes">
            <summary>
            Helper class for Identity Token Claims
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.DiscoveryUrlHelper.IsValidScheme(System.Uri)">
            <summary>
            Validate url scheme
            </summary>
            <param name="url"></param>
            <returns>boolean value</returns>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.DiscoveryUrlHelper.IsSecureScheme(System.Uri,Intuit.Ipp.OAuth2PlatformClient.DiscoveryPolicy)">
            <summary>
            Validate if url scheme is https or not
            </summary>
            <param name="url"></param>
            <param name="policy"></param>
            <returns>boolean value</returns>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.StringExtensions.EnsureTrailingSlash(System.String)">
            <summary>
            Ensures trailing slash at the end of the url
            </summary>
            <param name="url"></param>
            <returns>string</returns>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.StringExtensions.RemoveTrailingSlash(System.String)">
            <summary>
            Removes trailing slash at the end of the url
            </summary>
            <param name="url"></param>
            <returns>string</returns>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.StringExtensions.GetStringValue(System.Enum)">
            <summary>
            Will get the string value for a given enums value, this will
            only work if you assign the StringValue attribute to
            the items in your enum.
            </summary>
            <param name="value"></param>
            <returns>string</returns>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.StringValueAttribute">
            <summary>
            This attribute is used to represent a string value
            for a value in an enum.
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.StringValueAttribute.StringValue">
            <summary>
            Holds the stringvalue for a value in an enum.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.StringValueAttribute.#ctor(System.String)">
            <summary>
            Constructor used to init a StringValue Attribute
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.UserInfo">
            <summary>
            Class for deserializing the UserInfoResponse
            </summary>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.JsonWebAlgorithmsKeyTypes">
            <summary>
            Constants for JsonWebAlgorithms Key Type 
            </summary>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.JsonWebKey">
            <summary>
            Represents a Json Web Key as defined in http://tools.ietf.org/html/rfc7517.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.JsonWebKey.#ctor">
            <summary>
            Initializes an new instance of <see cref="T:Intuit.Ipp.OAuth2PlatformClient.JsonWebKey"/>.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.JsonWebKey.#ctor(System.String)">
            <summary>
            Initializes an new instance of <see cref="T:Intuit.Ipp.OAuth2PlatformClient.JsonWebKey"/> from a json string.
            </summary>
            <param name="json">a string that contains JSON Web Key parameters in JSON format.</param>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.JsonWebKey.Kty">
            <summary>
            Gets or sets the 'kty' (Key Type)..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.JsonWebKey.E">
            <summary>
            Gets or sets the 'e' (RSA - Exponent)..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.JsonWebKey.Use">
            <summary>
            Gets or sets the 'use' (Public Key Use)..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.JsonWebKey.Kid">
            <summary>
            Gets or sets the 'kid' (Key ID)..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.JsonWebKey.Alg">
            <summary>
            Gets or sets the 'alg' (KeyType)..
            </summary>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.JsonWebKey.N">
            <summary>
            Gets or sets the 'n' (RSA - Modulus)..
            </summary>
            <remarks> value is formated as: Base64urlEncoding</remarks>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.JsonWebKey.KeySize">
            <summary>
            Returns KeySize
            </summary>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.JsonWebKeyParameterNames">
            <summary>
            Names for Json Web Key Values
            </summary>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.JsonWebKeySet">
            <summary>
            Contains a collection of <see cref="T:Intuit.Ipp.OAuth2PlatformClient.JsonWebKey"/> that can be populated from a json string.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.JsonWebKeySet.#ctor">
            <summary>
            Initializes an new instance of <see cref="T:Intuit.Ipp.OAuth2PlatformClient.JsonWebKeySet"/>.
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.JsonWebKeySet.#ctor(System.String)">
            <summary>
            Initializes an new instance of <see cref="T:Intuit.Ipp.OAuth2PlatformClient.JsonWebKeySet"/> from a json string.
            </summary>
            <param name="json">a json string containing values.</param>
            <exception cref="T:System.ArgumentNullException">if 'json' is null or whitespace.</exception>
        </member>
        <member name="P:Intuit.Ipp.OAuth2PlatformClient.JsonWebKeySet.Keys">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>       
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.JsonWebKeyExtensions">
            <summary>
            Extension class for Json Wek Key
            </summary>
        </member>
        <member name="T:Intuit.Ipp.OAuth2PlatformClient.TimeConstantComparer">
            <summary>
            Helper class to do equality checks without leaking timing information
            </summary>
        </member>
        <member name="M:Intuit.Ipp.OAuth2PlatformClient.TimeConstantComparer.IsEqual(System.String,System.String)">
            <summary>
            Checks two strings for equality without leaking timing information.
            </summary>
            <param name="s1">string 1.</param>
            <param name="s2">string 2.</param>
            <returns>
            	<c>true</c> if the specified strings are equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:System.Net.Http.BasicAuthenticationHeaderValue">
            <summary>
            Formatter for Basic Authentication header
            </summary>
        </member>
        <member name="T:System.Net.Http.HttpClientExtensions">
            <summary>
            HttpClientExtensions for Headers
            </summary>
        </member>
        <member name="M:System.Net.Http.HttpClientExtensions.SetBasicAuthentication(System.Net.Http.HttpClient,System.String,System.String)">
            <summary>
            Sets Basic Authentication header value
            </summary>
            <param name="client"></param>
            <param name="clientId"></param>
            <param name="clientSecret"></param>
        </member>
        <member name="M:System.Net.Http.HttpClientExtensions.SetToken(System.Net.Http.HttpClient,System.String,System.String)">
            <summary>
            Sets Token value
            </summary>
            <param name="client"></param>
            <param name="scheme"></param>
            <param name="token"></param>
        </member>
        <member name="M:System.Net.Http.HttpClientExtensions.SetBearerToken(System.Net.Http.HttpClient,System.String)">
            <summary>
            Sets BearerToken value
            </summary>
            <param name="client"></param>
            <param name="token"></param>
        </member>
    </members>
</doc>
